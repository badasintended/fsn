import net.fabricmc.loom.task.RunGameTask

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.5.0"
    id "org.jetbrains.kotlin.plugin.serialization" version "1.5.0"
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "fabric-loom" version "0.6-SNAPSHOT"
    id "maven-publish"
}


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileKotlin.kotlinOptions.jvmTarget = "1.8"

archivesBaseName = project.archives_base_name
group = project.maven_group

def versionEnv = System.getenv("MOD_VERSION")
if (versionEnv == null || versionEnv.isBlank()) {
    versionEnv = "SNAPSHOT"
}

version = "${versionEnv}+${project.minecraft_version}"

sourceSets {
    dev {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

tasks.withType(RunGameTask) {
    classpath sourceSets.dev.runtimeClasspath
    jvmArgs project.run_args
}

repositories {
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases" }
}

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin}"

    modImplementation "me.shedaniel:RoughlyEnoughItems:${project.rei}"

    modRuntime "com.terraformersmc:modmenu:${project.modmenu}"

    devImplementation sourceSets.main.output
}

curseforge {
    if (System.getenv("CURSEFORGE_API") != null) {
        apiKey = System.getenv("CURSEFORGE_API")
        project {
            id = "391014"
            releaseType = "release"

            changelogType = "html"
            changelog = "<a href=\"https://github.com/badasintended/slotlink/releases/tag/${versionEnv}\"></a>"

            mainArtifact remapJar

            addGameVersion "Fabric"
            addGameVersion project.minecraft_version

            relations {
                requiredDependency "fabric-api"
                requiredDependency "fabric-language-kotlin"
                optionalDependency "roughly-enough-items"
            }

            afterEvaluate {
                uploadTask.dependsOn "build"
            }
        }
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(jar) {
                builtBy remapJar
            }
            artifact("${project.buildDir.absolutePath}/libs/${archivesBaseName}-${project.version}.jar") {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
